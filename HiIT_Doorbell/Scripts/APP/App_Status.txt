#include <Arduino.h>
#include "storage.h"

extern char myName[];
extern char myVer[];
extern char baseVersion[];

static esp_err_t status_handler(httpd_req_t *req) {
  static char json_response[1024];
  char *p = json_response;
  *p++ = '{';
  // Do not get attempt to get sensor when in error; causes a panic..
  if (critERR.length() == 0) {
    sensor_t *s = esp_camera_sensor_get();
    p += sprintf(p, "\"lamp\":%d,", lampVal);
    p += sprintf(p, "\"autolamp\":%d,", autoLamp);
    p += sprintf(p, "\"min_frame_time\":%d,", minFrameTime);
    p += sprintf(p, "\"brightness\":%d,", s->status.brightness);
    p += sprintf(p, "\"contrast\":%d,", s->status.contrast);
    p += sprintf(p, "\"saturation\":%d,", s->status.saturation);
    p += sprintf(p, "\"sharpness\":%d,", s->status.sharpness);
    p += sprintf(p, "\"cam_name\":\"%s\",", myName);
    p += sprintf(p, "\"code_ver\":\"%s\",", myVer);
    p += sprintf(p, "\"stream_url\":\"%s\"", streamURL);
  }
  *p++ = '}';
  *p++ = 0;
  httpd_resp_set_type(req, "application/json");
  httpd_resp_set_hdr(req, "Access-Control-Allow-Origin", "*");
  return httpd_resp_send(req, json_response, strlen(json_response));
}

static esp_err_t info_handler(httpd_req_t *req) {
  static char json_response[256];
  char *p = json_response;
  *p++ = '{';
  p += sprintf(p, "\"cam_name\":\"%s\",", myName);
  p += sprintf(p, "\"stream_url\":\"%s\"", streamURL);
  *p++ = '}';
  *p++ = 0;
  httpd_resp_set_type(req, "application/json");
  httpd_resp_set_hdr(req, "Access-Control-Allow-Origin", "*");
  return httpd_resp_send(req, json_response, strlen(json_response));
}
